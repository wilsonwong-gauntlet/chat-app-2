// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id
  name      String
  email     String    @unique
  avatar    String?
  channels  ChannelMember[]
  messages  Message[]
  sentDMs     DirectMessage[] @relation("SentMessages")
  receivedDMs DirectMessage[] @relation("ReceivedMessages")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Channel {
  id        String   @id @default(uuid())
  name      String   @unique
  isPrivate Boolean  @default(false)
  createdAt DateTime @default(now())
  members   ChannelMember[]
  messages  Message[]
}

model ChannelMember {
  id        String   @id @default(uuid())
  userId    String
  channelId String
  isAdmin   Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  channel   Channel  @relation(fields: [channelId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, channelId])
}

model Message {
  id        String   @id @default(cuid())
  content   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  channelId String
  channel   Channel  @relation(fields: [channelId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DirectMessage {
  id        String   @id @default(cuid())
  content   String
  senderId  String
  sender    User     @relation("SentMessages", fields: [senderId], references: [id])
  receiverId String
  receiver  User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}